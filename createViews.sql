CREATE VIEW DepartureBoard AS
SELECT
  OriginGate AS Gate,
  (SELECT CityName FROM AIRPORTS WHERE FLIGHTS.DestinationID = AIRPORTS.AirportID) AS Destination,
  TO_CHAR(
    (SELECT DEPARTURE FROM SCHEDULES WHERE FLIGHTS.ScheduleID = SCHEDULES.ScheduleID) 
    + COALESCE(NUMTODSINTERVAL((SELECT DELAYHOURS FROM DELAYS WHERE FLIGHTS.FlightID = DELAYS.DelayedFlightID), 'HOUR'), INTERVAL '0' HOUR)
    + COALESCE(NUMTODSINTERVAL((SELECT DELAYMINUTES FROM DELAYS WHERE FLIGHTS.FlightID = DELAYS.DelayedFlightID), 'MINUTE'), INTERVAL '0' MINUTE), 
    'HH:MI AM'
  ) AS "Departing At",
  TO_CHAR(
    (SELECT ARRIVAL FROM SCHEDULES WHERE FLIGHTS.ScheduleID = SCHEDULES.ScheduleID) 
    + COALESCE(NUMTODSINTERVAL((SELECT DELAYHOURS FROM DELAYS WHERE FLIGHTS.FlightID = DELAYS.DelayedFlightID), 'HOUR'), INTERVAL '0' HOUR)
    + COALESCE(NUMTODSINTERVAL((SELECT DELAYMINUTES FROM DELAYS WHERE FLIGHTS.FlightID = DELAYS.DelayedFlightID), 'MINUTE'), INTERVAL '0' MINUTE), 
    'HH:MI AM'
  ) AS "Arriving At",
  DECODE((SELECT DELAYEDFLIGHTID FROM DELAYS WHERE FLIGHTS.FlightID = DELAYS.DelayedFlightID), NULL, 'ON TIME', 'DELAYED') AS "STATUS"
FROM FLIGHTS
WHERE ORIGINID = 'ORD'
ORDER BY TO_DATE("Departing At", 'HH:MI AM') ASC;

CREATE VIEW SeatMap AS
SELECT *
FROM (SELECT CASE WHEN (SELECT SeatID FROM TICKETS WHERE TICKETS.SeatID = SEATS.SeatID AND TICKETS.FlightID = '2') IS NOT NULL THEN 'X' ELSE 'O' END AS SeatStatus,
    RowPosition,
    ColumnPosition
  FROM SEATS)
PIVOT (MAX(SeatStatus) FOR ColumnPosition IN ('A' AS A, 'B' AS B, 'C' AS C, 'D' AS D, 'E' AS E, 'F' AS F))
ORDER BY RowPosition;

CREATE VIEW LoyaltyProgram AS
SELECT 
    CONCAT(CONCAT(CUSTOMERS.FIRSTNAME,' '),CUSTOMERS.LASTNAME) AS "Name", 
    (COALESCE((SELECT SUM(TICKETS.COST) FROM TICKETS WHERE TICKETS.HolderID = CUSTOMERS.CustomerID), 0) + COALESCE((SELECT SUM(LUGGAGE.COST) FROM LUGGAGE WHERE LUGGAGE.OwnerID = CUSTOMERS.CustomerID), 0)) AS "TotalSpend",
    COALESCE((SELECT SUM(REFUNDS.REFUNDAMOUNT) FROM REFUNDS WHERE REFUNDS.CUSTOMERID = CUSTOMERS.CUSTOMERID), 0) AS "TOTALREFUND",
    LOYALTY.POINTS
FROM CUSTOMERS
INNER JOIN LOYALTY ON CUSTOMERS.CustomerID = LOYALTY.CustomerID;

CREATE VIEW Finances AS
SELECT 
    'TICKETS' AS "SALE_TYPE",
    SUM(TICKETS.COST) AS "SUM_SALES",
    FLOOR(AVG(TICKETS.COST)) AS "AVG_SALES",
    SUM(REFUNDS.REFUNDAMOUNT) AS "SUM_REFUND",
    FLOOR(AVG(REFUNDS.REFUNDAMOUNT)) AS "AVG_REFUND"
FROM 
    TICKETS
LEFT JOIN 
    REFUNDS ON REFUNDS.REFUNDID = TICKETS.REFUNDID
GROUP BY 'TICKETS'

UNION ALL

SELECT 
    'LUGGAGE' AS "SALE_TYPE",
    SUM(LUGGAGE.COST) AS "SUM_SALES",
    FLOOR(AVG(LUGGAGE.COST)) AS "AVG_SALES",
    SUM(REFUNDS.REFUNDAMOUNT) AS "SUM_REFUND",
    FLOOR(AVG(REFUNDS.REFUNDAMOUNT)) AS "AVG_REFUND"
FROM 
    LUGGAGE
LEFT JOIN 
    REFUNDS ON REFUNDS.REFUNDID = LUGGAGE.REFUNDID;
GROUP BY 'LUGGAGE'

CREATE VIEW CustomerLocation AS
SELECT 
    TO_CHAR(SCHEDULES.DEPARTURE, 'HH:MI AM') AS DepartureTime,
    RPAD(ORIGIN.STATEID || ' to ' || DESTINATION.STATEID, 40, '-') AS "Route",
    SUM(CASE WHEN CUSTOMERS.STATEID = ORIGIN.STATEID THEN 1 WHEN CUSTOMERS.STATEID = DESTINATION.STATEID THEN 1 ELSE 0 END) AS InStateCount,
    SUM(CASE WHEN CUSTOMERS.STATEID != ORIGIN.STATEID AND CUSTOMERS.STATEID != DESTINATION.STATEID THEN 1 ELSE 0 END) AS OutOfStateSum
FROM 
    FLIGHTS
LEFT JOIN 
    TICKETS ON TICKETS.FLIGHTID = FLIGHTS.FLIGHTID
LEFT JOIN 
    CUSTOMERS ON CUSTOMERS.CUSTOMERID = TICKETS.HOLDERID
LEFT JOIN
    SCHEDULES ON SCHEDULES.SCHEDULEID = FLIGHTS.FLIGHTID
LEFT JOIN
    AIRPORTS ORIGIN ON ORIGIN.AIRPORTID = FLIGHTS.ORIGINID
LEFT JOIN
    AIRPORTS DESTINATION ON DESTINATION.AIRPORTID = FLIGHTS.DESTINATIONID
GROUP BY 
    SCHEDULES.DEPARTURE,
    ORIGIN.STATEID,
    DESTINATION.STATEID
HAVING 
    SUM(CASE WHEN CUSTOMERS.STATEID = ORIGIN.STATEID THEN 1 WHEN CUSTOMERS.STATEID = DESTINATION.STATEID THEN 1 ELSE 0 END) > 0
    AND
    SUM(CASE WHEN CUSTOMERS.STATEID != ORIGIN.STATEID AND CUSTOMERS.STATEID != DESTINATION.STATEID THEN 1 ELSE 0 END) > 0;

COMMIT;

